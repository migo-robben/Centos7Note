#usda 1.0

def "pCube1"
{
    def Mesh "pCubeShape1"
    {
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
        rel material:binding = </materials/standardSurface1>
        uniform token orientation = "rightHanded"
        point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
        bool primvars:arnold:smoothing = 1

        vector3f[] primvars:normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
            elementSize = 24
            interpolation = "faceVarying"
        )
        int[] primvars:normals:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
        float2[] primvars:uv = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.625, 0.25), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.375, 1), (0.625, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
            elementSize = 14
            interpolation = "faceVarying"
        )
        int[] primvars:uv:indices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 9, 8, 1, 10, 11, 3, 12, 0, 2, 13]
        #token subdivisionScheme = "catmullClark"
        token subdivisionScheme = "none"
        #token subdivisionScheme = "loop"
        #token subdivisionScheme = "bilinear"
    }
}

def "materials"
{
    def Material "standardSurface1"
    {
        token outputs:arnold:surface.connect = </standardSurface1.outputs:surface>
    }
}

def Shader "standardSurface1"
{
    uniform token info:id = "arnold:standard_surface"
    float inputs:base = 0.53
    color3f inputs:base_color = (0.19340128, 0.6329083, 0.86558443)
    float inputs:coat = 0.9
    float inputs:coat_roughness = 0.01
    
    float inputs:specular = 0.92
    float inputs:specular_anisotropy = 0.45
    float inputs:specular_IOR = 1.518
    float inputs:specular_roughness = 0.04
    vector3f inputs:tangent = (1, 1, 1)
    float inputs:transmission_depth = 0.9
    bool inputs:transmit_aovs = 1
    token outputs:surface
}

